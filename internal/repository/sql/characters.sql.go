// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: characters.sql

package sql

import (
	"context"
)

const ListCharacters = `-- name: ListCharacters :many
SELECT id, account_id, clan_id, class_id, name, level, maxhp, curhp, maxmp, curmp, acc, str, con, dex, men, wit, critical, evasion, magic_attack, magic_defense, magic_speed, power_attack, power_defense, power_speed, run_speed, walker_speed, gender, exp, updated_at, created_at FROM characters
`

func (q *Queries) ListCharacters(ctx context.Context) ([]Characters, error) {
	rows, err := q.db.Query(ctx, ListCharacters)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []Characters{}
	for rows.Next() {
		var i Characters
		if err := rows.Scan(
			&i.ID,
			&i.AccountID,
			&i.ClanID,
			&i.ClassID,
			&i.Name,
			&i.Level,
			&i.Maxhp,
			&i.Curhp,
			&i.Maxmp,
			&i.Curmp,
			&i.Acc,
			&i.Str,
			&i.Con,
			&i.Dex,
			&i.Men,
			&i.Wit,
			&i.Critical,
			&i.Evasion,
			&i.MagicAttack,
			&i.MagicDefense,
			&i.MagicSpeed,
			&i.PowerAttack,
			&i.PowerDefense,
			&i.PowerSpeed,
			&i.RunSpeed,
			&i.WalkerSpeed,
			&i.Gender,
			&i.Exp,
			&i.UpdatedAt,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
